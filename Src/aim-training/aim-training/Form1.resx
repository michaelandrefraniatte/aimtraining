<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="webView1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwW
        xAUcFsRMHBbEkhwWxMccFsTpHBbE+hwWxPocFsTpHBbExxwWxJIcFsRMHBbEBgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwW
        xBgcFsSDHBfE/xsev/8bJbv/Giu4/xovtf8aMLT/GjC0/xovtf8aK7j/GyW7/xsev/8cF8T/HBbEgxwW
        xBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAcFsSAHBjD/xskvf8bL7j/GzG3/xsyuP8bMrj/GzK4/xsyuP8bMrj/GzK4/xsyuP8bMrj/GzG3/xsv
        uP8bJL3/HBjD/xwWxIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAcFsQtHBbElhwgwf8bMLz/GzK7/xszvP8bM7z/GzO8/xszvP8bM73/GzO9/xszvf8bM73/GzO8/xsz
        vP8bM7z/GzO8/xsyu/8bMLz/HCDB/xwWxJYcFsQtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHBbERBwXxP8cKMD/HDS+/xw1v/8cNb//HDW//xw1wP8cNcD/HTXB/x01wf8rQcT/K0LE/x42
        wf8dNcH/HDXA/xw1wP8cNb//HDW//xw1v/8cNL7/HCjA/xwXxP8cFsREAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABwWxCscF8T/HCrD/xw0wv8cNcP/HDXD/xw1xP8cNcT/NkvL/4aS3P/Fyur/7e3z//X1
        9f/19fX/7/D0/8jN6/+Pmt7/PFHM/xw1xP8cNcT/HDXD/xw1w/8cNML/HCrD/xwXxP8cFsQrAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHBbElh0oxf8dNcX/HTXF/x02xv8dNsf/K0LL/5Wf4v/t7vP/9fX1//b2
        9v/29vb/9vb2//b29v/29vb/9vb2//X19f/z9PX/pa7l/zBGzP8dNsf/HTbG/x01xf8dNcX/HSjF/xwW
        xJYAAAAAAAAAAAAAAAAAAAAAAAAAABwWxIAfI8b/HTbJ/x02yf8dN8r/HTfL/0JX1P/a3fH/9fX1//b2
        9v/39/f/9/f3//j4+P/4+Pj/+Pj4//j4+P/4+Pj/9/f3//b29v/19fX/4ePx/0xg1f8dN8v/HTfK/x02
        yf8dNsn/HyPG/xwWxIEAAAAAAAAAAAAAAAAcFsQXHxvF/x40y/8eN83/HjjO/x44z/9DWNf/5Obz//X1
        9f/39/f/9/f3//j4+P/5+fn/+fn5//n5+v/5+fr/+fn5//n5+f/4+Pj/+Pj4//f39//29vb/7O3z/01h
        2P8eOM//HjjO/x43zf8eNMv/HxvF/xwWxBcAAAAAAAAAABwWxIMhKsv/HjjQ/x450v8eOdP/KULW/9fb
        8v/19fX/9/f3//j4+P/5+fn/5ef0/4CM1f88T8H/HzW4/x80uP84S8D/eYbT/+Dj8v/5+fn/+Pj4//f3
        9//29vb/4OPy/zFJ1/8eOdP/HjnS/x440P8hKsv/HBbEgQAAAAAcFsQGHhjF/x830/8fOtX/HzvW/x87
        1/+YpOz/9fX1//b29v/4+Pj/+fn5/6y05f8kO8D/HDS+/xw0vv8cNL7/HDS+/xw0vv8cNL7/JDvA/6St
        4//5+fn/+Pj4//f39//19fX/pa/q/x871/8fO9b/HzrV/x830/8eGMX/HBbEBhwWxEwpK8z/IDrY/yA7
        2v8gO9v/MEne//Lz+f/29vb/9/f3//n5+f+ut+j/HjfG/x02xv8dNsb/HTbG/x02xv8dNsb/HTbG/x02
        xv8dNsb/HTbG/6Ks5f/5+fn/+Pj4//b29v/z9PX/PlXg/yA72/8gO9r/IDrY/ykrzP8cFsRNHBbEkio2
        0/8gPN3/ID3e/yA93/92iOr/9/f3//f39//4+Pj/6uz3/ylC0P8eOM7/HjjP/x44z/8eOdD/J0DS/ydB
        0v8eOdD/HjjP/x44z/8eOM7/JT7P/+Xn9v/4+Pj/9/f3//X19f+Pner/ID3f/yA93v8gPN3/KjbU/xwW
        xJMcFsTFJTna/yE94f8hPuL/IT7j/7rD9f/39/f/9/f3//n5+f+Rnun/HzrW/x861v8fOtf/KEPZ/6q0
        7f/y8vX/8/T1/7W+7f8wStr/HzrX/x861v8fOtb/hpTn//n5+f/39/f/9vb2/8rQ8v8hPuP/IT7i/yE9
        4f8lOdr/HBbExRwWxOoiPeH/IT7l/yE/5v8hP+f/5Of6//b29v/4+Pj/+fn5/0lg5P8hPd//IT3g/yE+
        4f+lsfH/9fX1//X19f/19fX/9fX1/7e/7/8hPuH/IT3g/yE93/9BWuP/+fn5//j4+P/29vb/7u/1/yNA
        5/8hP+b/IT7l/yI94f8cFsTqHBbE+SRA5/8iP+j/IkDq/yJA6//3+Pz/9vb2//j4+P/6+vr/KkXo/yI/
        6P8iP+j/Ij/p//Hy+//29vb/9fX1//X19f/19fX/8/T1/yxI6v8iP+j/Ij/o/ydE6P/5+fr/+Pj4//b2
        9v/19fX/Lkvs/yJA6v8iP+j/JEDn/xwWxPkcFsT5LUfo/yZC6P8mQ+r/JkPr//Dy+//39/f/+Pj4//n5
        +f8/Wer/Kkbo/ypG6f8qRur/7vD7//j4+P/19fX/9fX1//X19f/z8/X/Mk3r/ypG6f8qRuj/O1Tp//n5
        +v/4+Pj/9vb2//X19f8yTez/JkPq/yZC6P8tR+j/HBbE+RwWxOo6Uuf/KUXp/ylG6/8pRuz/3OD6//j4
        +P/4+Pj/+fn5/3iL8P8xTej/Mk3p/zJN6v+irvT//Pz8//j4+P/29vb/9fX1/7G78/8yTer/Mk3p/zFN
        6P9vgu7/+fn5//j4+P/29vb/7O31/ylG7P8pRuv/KUXp/zlR5/8cFsTqHBbExEVV4/8tSOn/LUjq/y1J
        7P+4wff/+vr6//f39//5+fn/vsb2/z5X6v85U+n/OVTq/z9Y6/+msvX/7/H7//Lz+/+vufb/Q1zs/zlU
        6v85U+n/PFbp/7fB9f/5+fn/9/f3//b29v/IzvP/LUns/y1I6v8tSOn/RFXj/xwWxMUcFsSSSVLc/zBM
        6f8wTOr/MEzr/3uO8v/8/Pz/9/f3//j4+P/x8/n/fY7w/0FZ6f9BWer/QVnq/0Fa6/9BWuv/QVrr/0Fa
        6/9BWer/QVnq/0FZ6f92iO//7/D5//j4+P/39/f/9fX1/5Gf8P8wTOv/MEzq/zBM6f9JU9z/HBbEkxwW
        xEw7O9H/OVTp/zRP6v80T+v/QFrt//Lz+//5+fn/9/f3//n5+f/Z3vf/e4zw/0xk6v9IYOr/SGDr/0hg
        6/9IYOv/SGDr/0hg6v9MY+r/eInv/9PY9//5+fn/9/f3//b29v/w8fX/S2Tt/zRP6/80T+r/OVTp/zs7
        0f8cFsRMHBbEBh8Zxf9ZbOr/N1Lq/zhS6/84Uuz/maf1//z8/P/39/f/+Pj4//n5+f/a3/f/lqTz/3GE
        7v9bcez/UGjq/09n6v9acev/b4Pu/5Oh8v/X3Pf/+fn5//j4+P/29vb/9fX1/6ay8/84Uuz/OFLr/zdS
        6v9ZbOr/HxnF/xwWxAYAAAAAHBbEgVFV2/9CWur/PFXr/zxV7P9BW+3/19z5//z8/P/4+Pj/+Pj4//n5
        +f/y8/n/yM/2/6u29f+bqPP/mqjz/6m19P/Gzvb/8fL5//n5+f/4+Pj/9/f3//X19f/X3PX/Rl/u/zxV
        7P88Vev/Qlrq/1FV2/8cFsSBAAAAAAAAAAAcFsQXIx7H/2p66/8+WOr/Pljr/z9Y7P9Ua+//5un6//z8
        /P/39/f/9/f3//j4+P/5+fn/+fn5//r6+v/6+vr/+fn5//n5+f/4+Pj/9/f3//b29v/19fX/5uj1/1pw
        7/8/WOz/Pljr/z5Y6v9qeuv/Ix7H/xwWxBcAAAAAAAAAAAAAAAAcFsSAQ0TU/2J27f9CWur/Qlvr/0Nb
        7P9VbO7/09n5//z8/P/5+fn/9/f3//f39//4+Pj/+Pj4//j4+P/4+Pj/9/f3//f39//29vb/9fX1/9nd
        9v9cce//Q1vs/0Jb6/9CWur/Ynbt/0NE1P8cFsSAAAAAAAAAAAAAAAAAAAAAAAAAAAAcFsSWXmTf/11y
        7f9FXev/RV7s/0Ze7f9MY+7/oK31//P0+//8/Pz/+vr6//j4+P/39/f/9vb2//b29v/39/f/9/f3//P0
        +f+ptfb/TmXv/0Ze7f9FXuz/RV3r/11y7f9fZN//HBbElgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwW
        xCodGMX/a3Pj/2Z67f9IYOv/SGHs/0lh7f9JYe3/VGvv/5Gg9P/Fzfj/3+P6//P0+//4+fz/6Ov7/8jP
        +P+YpfT/WG7v/0lh7f9JYe3/SGHs/0hg6/9meu3/a3Pj/x0Yxf8cFsQrAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABwWxEQdGMX/Ymjf/3qM8P9Raez/S2Ts/0tk7P9LZO3/S2Tt/0xk7v9MZO7/TGTu/0xk
        7v9MZO7/TGTu/0tk7f9LZO3/S2Ts/0tk7P9Raez/eozw/2Jo3/8dGMX/HBbERAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABwWxC0cFsSWRUfU/4aT7v9xhO7/VGrs/05m7P9OZuz/Tmbs/05m
        7f9OZu3/Tmbt/05m7f9OZuz/Tmbs/05m7P9Uauz/cYTu/4aT7v9FR9T/HBbElhwWxC0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcFsR/JB/H/1ld3P+Ll+//gZPx/2+C
        7/9hdu7/V23t/1Nq7P9Tauz/V23t/2F27v9vgu//gZPx/4yY7/9ZXdz/JB/H/xwWxH8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcFsQXHBbEgR4Z
        xf9BQdL/Y2jf/3yG6P+Nme//laLy/5Wi8v+Nme//fIbo/2No3/9BQdL/HhnF/xwWxIIcFsQXAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHBbEBRwWxEwcFsSRHBbExhwWxOgcFsT4HBbE+BwWxOgcFsTGHBbEkRwWxEwcFsQFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/AA///AAD//gAAf/gAAB/wAAAP4AAAB+AA
        AAfAAAADgAAAAYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAAAABgAAAAcAAAAPgAAAH4AAAB/AAAA/4AAAf/gAAf/8AAP//wAP/KAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxNMcmJyjEkxsfvtUbIrz4GyK8+Bsf
        vtUoKcSUMzXHJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD1EzAsoKcaFGye9/xsxuf8bMrr/GzK6/xsy
        uv8bMrr/GzG5/xsnvf8qKsaFQknMCwAAAAAAAAAAAAAAAD5FzgocG8PQHDHA/xw1wf8iOsP/YXHR/4qW
        2/+Ll9v/ZHTS/yQ8w/8cNcH/HDHA/xwbw9BES88KAAAAAAAAAAApKsiFHTLH/x02yP9Za9X/297w//b2
        9v/39/f/9/f3//b29v/g4/H/Xm/W/x02yP8dMsf/KyzJhQAAAAAyNc0mHyzK/x440P9Ya9v/8fH1//f3
        9//V2e7/k53b/5Kc2v/S1u3/+Pj4//P09f9fcdz/HjjQ/x8syv86Pc8mLCzLlB851v8jPtn/3eD0//f3
        9/+cpuP/HjbC/xw1wv8cNcL/HjbC/5ei4f/4+Pj/4OPy/ydB2v8fOdb/MDHMlCEmzdUgPd//XHHo//f3
        9//b3vT/ITvS/yA70/94h+H/e4vh/yI90/8gOtL/19vz//b29v9meuf/ID3f/yEmzdUfKtT4IT/n/4eX
        8v/39/f/mabv/yE+4/92iO3/9fX1//X19f99juv/IT7j/5ak7//39/f/jZvv/yE/5/8fKtT4JzHV+CdE
        6f+GlvP/9/f3/6q18/8tSej/e4zw//j4+P/19fX/gpLv/y1J6P+nsvL/9/f3/4+d8P8nROn/JzHV+DE0
        0dUuSun/ZHnw//n5+f/o6vj/TWTr/z5X6v+FlfH/iJjx/z9Y6v9LYur/5ej3//b29v9tgO7/Lkrp/zE1
        0dU1Nc+UP1jp/zlT6//g4/n/9/f3/8nQ9f9me+3/Tmbr/05m6v9lee3/xs31//f39//g4/T/O1Xr/z9Y
        6f86OtCUPD/UJkhR3f89Vuv/an7w//X2+v/39/f/6uz4/87U9v/N1Pb/6uz4//f39//x8vX/bYDv/z1W
        6/9IUd3/REjVJgAAAAA5OdCFV2no/0Nc6/9ugfD/4uX5//n5+f/39/f/9/f3//f39//h5fb/coTw/0Nc
        6/9Yaej/OzvQhQAAAAAAAAAAVFvcCjAuzNBic+n/S2Ps/0xl7f97jfH/mqf0/56r9P99j/H/TWXt/0tj
        7P9ic+n/MC7M0Fph3QoAAAAAAAAAAAAAAABZX90LPDzRhV1k3/9rfu7/W3Ht/1Fo7P9RaOz/W3Ht/2t+
        7v9dZN//PT3RhV1j3gsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJS9YmPj7Rk0VG09VWWdr3Vlna90VG
        09U/P9GTS07WJgAAAAAAAAAAAAAAAAAAAADwDwAAwAMAAIABAACAAQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAQAAgAEAAMADAADwDwAA
</value>
  </data>
</root>